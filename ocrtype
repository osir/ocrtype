#!/usr/bin/env bash

VERSION='0.1'

# Requirements:
# - grimshot(1)
# - tesseract(1)
# - wtype(1)
# - wl-clipboard(1): wl-copy, wl-paste

# Basic TODO:
# - Which clipboards to use? => Setting?
# - Which mime type to use?
# - Logging, Debug/Verbose flag, stderr instead of stdout
# - Finish Help
# - Save read output into file
#
# Feature TODO:
# - Notify-send
# - Setting custom clipboard and OCR handler
# - Tuning tesseract and maybe adding flags?
# - auto-detect compositor

set -e
set -u
set -x

main() {
    [[ "${#*}" -lt 1 ]] && help_exit '1'
    local mode="$1" && shift
    local scr_tmpfile
    local compositor='default'

    # TODO: hardcoded
    local typing_start_delay=2000
    local typing_between_delay=0

    for i in "$@"; do
        case "$i" in
            --compositor=*)
                compositor="${i#*=}"
                ;;
            -h|--help)
                help_exit 0
                ;;
            -*|--*)
                printf 'Unknown option "%s"\n' "$i"
                help_exit 1
                ;;
            *)
              ;;
        esac
          shift

    done

    local scr_tmpfile='/tmp/ocrtype-temp-screenshot'
    case "$compositor" in
        default | wlroots)
            scr_cmd="grimshot save area $scr_tmpfile"
            typing_cmd="wtype -s $typing_start_delay -"
            ;;
        gnome)
            scr_cmd="gnome-screenshot --area --file=$scr_tmpfile"
            typing_cmd='' # TODO find gnome-compatible way of typing
            ;;
    esac

    case "$mode" in
        r*)
            $scr_cmd
            local result="$(tesseract "$scr_tmpfile" -)"
            wl-copy - <<<"$result"
            notify-send --app-name='ocrtype' --urgency=low \
                'Read text to clipboard.' \
                "\"${#result} Chars: $( tr -d '\n\r' <<< "${result:0:40}" )\""
            ;;
        w*)
            printf 'Starting to type in %sms.\n' "$typing_start_delay"
            wl-paste \
                | $typing_cmd
            ;;
        *)
            printf 'Unknown MODE "%s"\n' "$mode"
            help_exit '1'
            ;;
    esac

}


help_exit() {
    cat << "EOF"
ocrtype V$VERSION\n\n
Usage: ocrtype <MODE> [flags]\n
Modes: r, w
OCR read from a screen area into clipboard or type clipboard contents.\n
EOF
    exit "${1:-0}"
}


main "$@"

